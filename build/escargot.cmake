CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

# FLAGS
SET (ESCARGOT_CXXFLAGS)
SET (ESCARGOT_LDFLAGS)
SET (ESCARGOT_LIBRARIES)
SET (ESCARGOT_LIBDIRS)

SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_CONFIG}")
SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_COMMON}")
SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_THIRD_PARTY}")
SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_CONFIG}")
SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_COMMON}")

IF (${HOST} STREQUAL "linux")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_LINUX}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_LINUX}")
    SET (ESCARGOT_LIBRARIES ${ESCARGOT_LIBRARIES} ${ESCARGOT_LIBRARIES_LINUX})
    SET (ESCARGOT_LIBDIRS ${ESCARGOT_LIBDIRS} ${ESCARGOT_LIBDIRS_LINUX})
ELSEIF (${HOST} MATCHES "tizen")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_TIZEN}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_TIZEN}")
    SET (ESCARGOT_LIBRARIES ${ESCARGOT_LIBRARIES} ${ESCARGOT_LIBRARIES_TIZEN})
    SET (ESCARGOT_LIBDIRS ${ESCARGOT_LIBDIRS} ${ESCARGOT_LIBDIRS_TIZEN})
ELSEIF (${HOST} MATCHES "android")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_ANDROID}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_ANDROID}")
ENDIF()

IF (${ARCH} STREQUAL "x64")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_X64}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_X64}")
ELSEIF (${ARCH} STREQUAL "x86")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_X86}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_X86}")
ELSEIF (${ARCH} STREQUAL "arm")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_ARM}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_ARM}")
ENDIF()

IF (${MODE} STREQUAL "debug")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_DEBUG}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_DEBUG}")
ELSEIF (${MODE} STREQUAL "release")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_RELEASE}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_RELEASE}")
ENDIF()

IF (${OUTPUT} STREQUAL "bin")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_BIN}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_BIN}")
ELSEIF (${OUTPUT} STREQUAL "shared_lib")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_SHAREDLIB}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_SHAREDLIB}")
ELSEIF (${OUTPUT} STREQUAL "static_lib")
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_STATICLIB}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_STATICLIB}")
ENDIF()

IF ("${LTO}" EQUAL 1)
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_LTO}")
    SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_LDFLAGS_LTO}")
    IF (${OUTPUT} STREQUAL "bin")
        SET (ESCARGOT_LDFLAGS "${ESCARGOT_LDFLAGS} ${ESCARGOT_CXXFLAGS}")
    ENDIF()
ENDIF()

IF ("${VENDORTEST}" EQUAL 1)
    SET (ESCARGOT_CXXFLAGS "${ESCARGOT_CXXFLAGS} ${ESCARGOT_CXXFLAGS_VENDORTEST}")
ENDIF()


# SOURCE FILES
FILE (GLOB SRC_API_LIST ${ESCARGOT_ROOT}/src/api/*.cpp)
FILE (GLOB SRC_HEAP_LIST ${ESCARGOT_ROOT}/src/heap/*.cpp)
FILE (GLOB SRC_INTERPRETER_LIST ${ESCARGOT_ROOT}/src/interpreter/*.cpp)
FILE (GLOB SRC_PARSER_LIST ${ESCARGOT_ROOT}/src/parser/*.cpp)
FILE (GLOB SRC_PARSER_AST_LIST ${ESCARGOT_ROOT}/src/parser/ast/*.cpp)
FILE (GLOB SRC_PARSER_ESPRIMA_LIST ${ESCARGOT_ROOT}/src/parser/esprima_cpp/*.cpp)
FILE (GLOB SRC_RUNTIME_LIST ${ESCARGOT_ROOT}/src/runtime/*.cpp)
FILE (GLOB SRC_UTIL_LIST ${ESCARGOT_ROOT}/src/util/*.cpp)

FILE (GLOB YARR_LIST ${THIRD_PARTY_ROOT}/yarr/*.cpp)
FILE (GLOB DOUBLE_CONVERSION_LIST ${THIRD_PARTY_ROOT}/double_conversion/*.cc)
FILE (GLOB GCUTIL_LIST ${GCUTIL_ROOT}/*.cpp)

SET (SRC ${SRC_API_LIST} ${SRC_HEAP_LIST} ${SRC_INTERPRETER_LIST} 
     ${SRC_PARSER_LIST} ${SRC_PARSER_AST_LIST} ${SRC_PARSER_ESPRIMA_LIST} 
     ${SRC_RUNTIME_LIST} ${SRC_UTIL_LIST} ${YARR_LIST} 
     ${DOUBLE_CONVERSION_LIST} ${GCUTIL_LIST})

IF (${OUTPUT} STREQUAL "bin")
    FILE (GLOB SRC_SHELL_LIST ${ESCARGOT_ROOT}/src/shell/*.cpp) 
    SET (SRC ${SRC} ${SRC_SHELL_LIST})
ENDIF()


# GC LIBRARY (static)
#ADD_SUBDIRECTORY (${GCUTIL_ROOT})
#IF (${MODE} STREQUAL "debug")
#    SET (GC_LIB gc_debug)
#ELSEIF (${MODE} STREQUAL "release")
#    SET (GC_LIB gc_release)
#ENDIF()

#FIND_LIBRARY (GC_LIB libgc.a 
#              PATHS ${GCUTIL_ROOT}/bdwgc/out/${HOST}/${ARCH}/${MODE}.static/.libs)


# BUILD
IF (${OUTPUT} STREQUAL "bin")
    SET (GC_LIB "${GCUTIL_ROOT}/bdwgc/out/${HOST}/${ARCH}/${MODE}.static/.libs/libgc.a")
    MESSAGE (${GC_LIB})
    ADD_CUSTOM_COMMAND (OUTPUT ${GC_LIB} 
                        COMMENT "Build GCutil" 
                        COMMAND @./build_third_party.sh)

#    ADD_LIBRARY (GC_LIB STATIC IMPORTED)
#    SET_PROPERTY (TARGET GC_LIB PROPERTY IMPORTED_LOCATION ${GCUTIL_ROOT}/bdwgc/out/${HOST}/${ARCH}/${MODE}.static/.libs/libgc.a)

    ADD_EXECUTABLE (${ESCARGOT_TARGET} ${SRC} ${GC_LIB})
#ADD_EXECUTABLE (${ESCARGOT_TARGET} ${SRC})
#TARGET_LINK_LIBRARIES (${ESCARGOT_TARGET} ${ESCARGOT_LIBRARIES} GC_LIB)
    TARGET_LINK_LIBRARIES (${ESCARGOT_TARGET} ${ESCARGOT_LIBRARIES} ${GC_LIB})
    TARGET_INCLUDE_DIRECTORIES (${ESCARGOT_TARGET} PUBLIC ${ESCARGOT_LIBDIRS})
    SET_TARGET_PROPERTIES (${ESCARGOT_TARGET} PROPERTIES 
                           COMPILE_FLAGS "${ESCARGOT_CXXFLAGS}" 
                           LINK_FLAGS "${ESCARGOT_LDFLAGS}" 
                           RUNTIME_OUTPUT_DIRECTORY "${OUTDIR}")

    ADD_CUSTOM_COMMAND (TARGET ${ESCARGOT_TARGET} PRE_BUILD
                        COMMAND @make tidy)
    ADD_CUSTOM_COMMAND (TARGET ${ESCARGOT_TARGET} POST_BUILD
                        COMMAND @cp ${OUTDIR}/${ESCARGOT_TARGET} .)

ELSEIF (${OUTPUT} STREQUAL "shared_lib")
    ADD_LIBRARY (${ESCARGOT_TARGET} SHARED ${SRC})
#TODO standalone
#TARGET_LINK_LIBRARIES (${ESCARGOT_TARGET} ${ESCARGOT_LIBRARIES})
#TARGET_INCLUDE_DIRECTORIES (${ESCARGOT_TARGET} PUBLIC ${ESCARGOT_LIBDIRS})
    SET_TARGET_PROPERTIES (${ESCARGOT_TARGET} PROPERTIES 
                           COMPILE_FLAGS "${ESCARGOT_CXXFLAGS}" 
                           LINK_FLAGS "${ESCARGOT_LDFLAGS}" 
                           LIBRARY_OUTPUT_DIRECTORY "${OUTDIR}")
ELSEIF (${OUTPUT} STREQUAL "static_lib")
    ADD_LIBRARY (${ESCARGOT_TARGET} STATIC ${SRC})
#TODO standalone
#TARGET_LINK_LIBRARIES (${ESCARGOT_TARGET} ${ESCARGOT_LIBRARIES})
#TARGET_INCLUDE_DIRECTORIES (${ESCARGOT_TARGET} PUBLIC ${ESCARGOT_LIBDIRS})
    SET_TARGET_PROPERTIES (${ESCARGOT_TARGET} PROPERTIES 
                           COMPILE_FLAGS "${ESCARGOT_CXXFLAGS}" 
                           LINK_FLAGS "${ESCARGOT_LDFLAGS}" 
                           ARCHIVE_OUTPUT_DIRECTORY "${OUTDIR}")
ENDIF()


# CUSTOM TARGET for Starfish
ADD_CUSTOM_TARGET (install_header_to_include
                   COMMENT "install_header_to_include"
                   COMMAND @cp -f ${ESCARGOT_ROOT}/src/api/EscargotPublic.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/GCUtil.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/Allocator.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/LeakChecker.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/bdwgc/include/gc.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/bdwgc/include/gc_mark.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/bdwgc/include/gc_typed.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/bdwgc/include/gc_allocator.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/bdwgc/include/gc_cpp.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/bdwgc/include/gc_version.h ${ESCARGOT_ROOT}/include/.
                   COMMAND @cp -f ${GCUTIL_ROOT}/bdwgc/include/gc_config_macros.h ${ESCARGOT_ROOT}/include/.
                  )
